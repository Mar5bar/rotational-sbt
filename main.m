addpath(genpath('.'))

methodsToDo = {'rotletAnsatz','rotletAnsatzRTT','rotletAnsatzRTTI1Approx','combinedAnsatz','combinedAnsatzBCApprox','combinedAnsatzRTT','combinedAnsatzRTTBCApprox'};
% methodsToDo = {'rotletAnsatz','rotletAnsatzRTT'};

%% Setup parameters.
params = struct();

% Slenderness parameter.
params.epsilon = 0.01;

params.tol = 1e-8;

% Level of numerical discretisation (number of segments on which force and
% torque are treated as constant).
params.N = 10;

% Select a centreline xi:
params.xiSelector = 1;

% Select a shape function eta:
params.etaSelector = 1;

% Select a prescribed linear velocity:
params.linVelSelector = 1;

% Select a prescribed angular velocity:
params.angVelSelector = 2;

% Set the number of arclengths to sample when evaluating the velocity
% generated by the ansaetze.
params.numArclengthEvaluationPoints = 11;

% Set the number of points on a cross section to sample when evaluating the
% velocity generated by the ansaetze.
params.numCircumferentialEvaluationPoints = 6;

% Evaluate the SBT ansaetze.
output = evaluateSBT(params, methodsToDo);

% Evaluate the error in the velocity fields.
errors = struct();
for name = methodsToDo
    name = name{1};
    errors.(name) = evalVelErrors(name, output);
end