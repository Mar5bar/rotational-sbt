%% Test out the validity of using the simplified RTT in the combined ansatz,
%for fixed V and variously sized Omega.
addpath(genpath('.'))

methodsToDo = {'combinedAnsatz', 'combinedAnsatzRTT', 'combinedAnsatzRTTBCApprox'};

%% Setup parameters.
params = struct();

% Slenderness parameter.
params.epsilon = 1e-2;

% Level of numerical discretisation (number of segments on which force and
% torque are treated as constant).
params.N = 100;

params.xiSelector = 1;
params.etaSelector = 4;
params.linVelSelector = 2;

% The range of angular speeds, to be multiplied by et.
angularSpeeds = logspace(-1,4,20);

% Set the number of arclengths to sample when evaluating the velocity
% generated by the ansaetze.
params.numArclengthEvaluationPoints = 51;

% Set the number of points on a cross section to sample when evaluating the
% velocity generated by the ansaetze.
params.numCircumferentialEvaluationPoints = 12;

for speed = angularSpeeds

    params.angVelSelector = speed;

    % Evaluate the SBT ansaetze.
    [output, As] = evaluateSBT(params, methodsToDo, As);

    % Evaluate the error in the velocity fields.
    errors = struct();
    for name = methodsToDo
        name = name{1};
        errors.(name) = evalVelErrors(name, output);
    end

    save(['output/validityOfRTT/',num2str(speed),'.mat'],'params','output','errors')

end